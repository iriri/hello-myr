use std
use thread
use "chan"
use "wg"

const Threadc : int64 = 16
const Lim = 100000

var w

const main = {
	var c = chan.mk(32)
	var sum : int64 = 0
	var sump = &sum
	w = wg.mk((Threadc : uint32))

	for var i = 0; i < Threadc ; i++
		thread.spawn({
			var local_sum : int64 = 0
			for i1 : chan.bymsg(c)
				local_sum += i1
			;;
			std.put("local sum: {}\n", local_sum)
			thread.xadd(sump, local_sum)
			wg.post(&w)
		})
	;;
	for var i = 0; i < Threadc ; i++
		var c1 = chan.dup(c)
		thread.spawn({
			var local_sum = 0
			for var i = 1; i <= Lim; i++
				chan.send(c1, i)
			;;
			chan.close(c1)
		})
	;;
	chan.close(c)

	wg.wait(&w)
	std.put("sum:	  {}\n", sum)
	std.put("expected: {}\n", ((Lim * (Lim + 1)) / 2) * Threadc)

	chan.free(c)
}
